#include<GL/glut.h>
#include<stdlib.h>
double y_max = 100, y_min = 50, x_max = 100, x_min = 50; //Oldviewport
double ny_max = 300, ny_min = 200, nx_max = 300, nx_min = 200;//NewViewPort
double t1 = 0.0, t2 = 1.0; 
double X1 = 10; 
double Y1 = 20; 
double X2 =120;
double Y2 = 80;
void init() 
{
	glLoadIdentity();
	glClearColor(1.0, 1.0, 1.0, 1.0);
	glMatrixMode(GL_PROJECTION); 
	gluOrtho2D(0, 500, 0, 500);
	glMatrixMode(GL_MODELVIEW);
}
void draw_lineAndPort(double x1, double y1, double x2, double y2, double y_max,double y_min, double x_max, double x_min) 
{
	glColor3d(1, 0, 0);
	glBegin(GL_LINE_LOOP);
	glVertex2d(x_min, y_min);
	glVertex2d(x_max, y_min);
	glVertex2d(x_max, y_max);
	glVertex2d(x_min, y_max);
	glEnd(); glColor3d(0, 0, 0);
	glBegin(GL_LINES);
	glVertex2d(x1, y1);
	glVertex2d(x2, y2); glEnd();
}
bool cliptest(double p, double q) 
{
	double t = q / p; 
	if (p == 0 && q < 0)//Line is parallel to viewport and outside
	{ return false;
	}
	else if(p < 0) 
	{
		if (t > t1)
			t1 = t; 
		if (t > t2)
			return false;
	}
	else if(p > 0) 
	{
		if (t < t2)
			t2 = t; 
		if (t < t1)
			return false;
	}
	return true;
}
void liangBarsky(double x1, double y1, double x2, double y2) 
{
	double dx = x2 - x1;
	double dy = y2 - y1;
	if (cliptest(-dx, x1 - x_min) && cliptest(dx, x_max - x1) && cliptest(- dy, y1 - y_min) && cliptest(dy, y_max - y1)) 
	{
		if (t2 < 1) 
		{
			x2 = x1 + t2 * dx;
			y2 = y1 + t2 * dy;
		}
	    if (t1 > 0) 
		{
			x1 = x1 + t1 * dx;
			y1 = y1 + t1 * dy;
		}
		//Scaling to new Viewport
		double scale_x = (nx_max - nx_min) / (x_max - x_min);
		double scale_y = (ny_max - ny_min) / (y_max - y_min);
		//New coordinates of the points
		//Point 1
		double nx1 = nx_min + (x1 - x_min) * scale_x;
		double ny1 = ny_min + (y1 - y_min) * scale_y;
		//Point 2
		double nx2 = nx_min + (x2 - x_min) * scale_x; 
		double ny2 = ny_min + (y2 - y_min) * scale_y; 
		draw_lineAndPort(nx1, ny1, nx2, ny2, ny_max,ny_min, nx_max, nx_min);
	}
}
void display() {
	glClear(GL_COLOR_BUFFER_BIT); 
	draw_lineAndPort(X1, Y1, X2, Y2, y_max, y_min, x_max, x_min); 
	liangBarsky(X1, Y1, X2, Y2);
	glFlush();
}
int main(int argc, char** argv) 
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowPosition(0, 0);
	glutInitWindowSize(500, 500);
	glutCreateWindow("LiangBarsky");
	glutDisplayFunc(display);
	init();
	glutMainLoop();
	return 0;
}
